// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: protobuf/agent.message.proto

package rpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Sysmon event code 1: Process creation
type EventCode1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessId string `protobuf:"bytes,1,opt,name=ProcessId,proto3" json:"ProcessId,omitempty"`
	Action    string `protobuf:"bytes,2,opt,name=Action,proto3" json:"Action,omitempty"`
}

func (x *EventCode1) Reset() {
	*x = EventCode1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_agent_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventCode1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCode1) ProtoMessage() {}

func (x *EventCode1) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_agent_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCode1.ProtoReflect.Descriptor instead.
func (*EventCode1) Descriptor() ([]byte, []int) {
	return file_protobuf_agent_message_proto_rawDescGZIP(), []int{0}
}

func (x *EventCode1) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *EventCode1) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

// Sysmon event code 3: Network connection
type EventCode3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessId       string `protobuf:"bytes,1,opt,name=ProcessId,proto3" json:"ProcessId,omitempty"`
	SourceIp        string `protobuf:"bytes,2,opt,name=SourceIp,proto3" json:"SourceIp,omitempty"`
	SourcePort      string `protobuf:"bytes,3,opt,name=SourcePort,proto3" json:"SourcePort,omitempty"`
	DestinationIp   string `protobuf:"bytes,4,opt,name=DestinationIp,proto3" json:"DestinationIp,omitempty"`
	DestinationPort string `protobuf:"bytes,5,opt,name=DestinationPort,proto3" json:"DestinationPort,omitempty"`
	Action          string `protobuf:"bytes,6,opt,name=Action,proto3" json:"Action,omitempty"`
}

func (x *EventCode3) Reset() {
	*x = EventCode3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_agent_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventCode3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCode3) ProtoMessage() {}

func (x *EventCode3) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_agent_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCode3.ProtoReflect.Descriptor instead.
func (*EventCode3) Descriptor() ([]byte, []int) {
	return file_protobuf_agent_message_proto_rawDescGZIP(), []int{1}
}

func (x *EventCode3) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *EventCode3) GetSourceIp() string {
	if x != nil {
		return x.SourceIp
	}
	return ""
}

func (x *EventCode3) GetSourcePort() string {
	if x != nil {
		return x.SourcePort
	}
	return ""
}

func (x *EventCode3) GetDestinationIp() string {
	if x != nil {
		return x.DestinationIp
	}
	return ""
}

func (x *EventCode3) GetDestinationPort() string {
	if x != nil {
		return x.DestinationPort
	}
	return ""
}

func (x *EventCode3) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

// Sysmon event code 7: Image loaded
type EventCode7 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessId   string `protobuf:"bytes,1,opt,name=ProcessId,proto3" json:"ProcessId,omitempty"`
	ImageLoaded string `protobuf:"bytes,2,opt,name=ImageLoaded,proto3" json:"ImageLoaded,omitempty"`
	Action      string `protobuf:"bytes,3,opt,name=Action,proto3" json:"Action,omitempty"`
}

func (x *EventCode7) Reset() {
	*x = EventCode7{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_agent_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventCode7) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCode7) ProtoMessage() {}

func (x *EventCode7) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_agent_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCode7.ProtoReflect.Descriptor instead.
func (*EventCode7) Descriptor() ([]byte, []int) {
	return file_protobuf_agent_message_proto_rawDescGZIP(), []int{2}
}

func (x *EventCode7) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *EventCode7) GetImageLoaded() string {
	if x != nil {
		return x.ImageLoaded
	}
	return ""
}

func (x *EventCode7) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

// Sysmon event code 8: CreateRemoteThread
type EventCode8 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceProcessId string `protobuf:"bytes,1,opt,name=SourceProcessId,proto3" json:"SourceProcessId,omitempty"`
	Action          string `protobuf:"bytes,2,opt,name=Action,proto3" json:"Action,omitempty"`
}

func (x *EventCode8) Reset() {
	*x = EventCode8{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_agent_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventCode8) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCode8) ProtoMessage() {}

func (x *EventCode8) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_agent_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCode8.ProtoReflect.Descriptor instead.
func (*EventCode8) Descriptor() ([]byte, []int) {
	return file_protobuf_agent_message_proto_rawDescGZIP(), []int{3}
}

func (x *EventCode8) GetSourceProcessId() string {
	if x != nil {
		return x.SourceProcessId
	}
	return ""
}

func (x *EventCode8) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

// Sysmon event code 9: RawAccessRead
type EventCode9 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessId string `protobuf:"bytes,1,opt,name=ProcessId,proto3" json:"ProcessId,omitempty"`
	Action    string `protobuf:"bytes,2,opt,name=Action,proto3" json:"Action,omitempty"`
}

func (x *EventCode9) Reset() {
	*x = EventCode9{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_agent_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventCode9) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCode9) ProtoMessage() {}

func (x *EventCode9) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_agent_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCode9.ProtoReflect.Descriptor instead.
func (*EventCode9) Descriptor() ([]byte, []int) {
	return file_protobuf_agent_message_proto_rawDescGZIP(), []int{4}
}

func (x *EventCode9) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *EventCode9) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

// Sysmon event code 10: ProcessAccess
type EventCode10 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessId string `protobuf:"bytes,1,opt,name=ProcessId,proto3" json:"ProcessId,omitempty"`
	Action    string `protobuf:"bytes,2,opt,name=Action,proto3" json:"Action,omitempty"`
}

func (x *EventCode10) Reset() {
	*x = EventCode10{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_agent_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventCode10) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCode10) ProtoMessage() {}

func (x *EventCode10) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_agent_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCode10.ProtoReflect.Descriptor instead.
func (*EventCode10) Descriptor() ([]byte, []int) {
	return file_protobuf_agent_message_proto_rawDescGZIP(), []int{5}
}

func (x *EventCode10) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *EventCode10) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

// Sysmon event code 11: FileCreate
type EventCode11 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetFilename string `protobuf:"bytes,1,opt,name=TargetFilename,proto3" json:"TargetFilename,omitempty"`
	Action         string `protobuf:"bytes,2,opt,name=Action,proto3" json:"Action,omitempty"`
}

func (x *EventCode11) Reset() {
	*x = EventCode11{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_agent_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventCode11) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCode11) ProtoMessage() {}

func (x *EventCode11) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_agent_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCode11.ProtoReflect.Descriptor instead.
func (*EventCode11) Descriptor() ([]byte, []int) {
	return file_protobuf_agent_message_proto_rawDescGZIP(), []int{6}
}

func (x *EventCode11) GetTargetFilename() string {
	if x != nil {
		return x.TargetFilename
	}
	return ""
}

func (x *EventCode11) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

// Sysmon event code 12: RegistryEvent (Object create and delete)
type EventCode12 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetObject string `protobuf:"bytes,1,opt,name=TargetObject,proto3" json:"TargetObject,omitempty"`
	Action       string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *EventCode12) Reset() {
	*x = EventCode12{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_agent_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventCode12) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCode12) ProtoMessage() {}

func (x *EventCode12) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_agent_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCode12.ProtoReflect.Descriptor instead.
func (*EventCode12) Descriptor() ([]byte, []int) {
	return file_protobuf_agent_message_proto_rawDescGZIP(), []int{7}
}

func (x *EventCode12) GetTargetObject() string {
	if x != nil {
		return x.TargetObject
	}
	return ""
}

func (x *EventCode12) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

// Sysmon event code 13: RegistryEvent (Value Set)
type EventCode13 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetObject string `protobuf:"bytes,1,opt,name=TargetObject,proto3" json:"TargetObject,omitempty"`
	Action       string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *EventCode13) Reset() {
	*x = EventCode13{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_agent_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventCode13) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCode13) ProtoMessage() {}

func (x *EventCode13) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_agent_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCode13.ProtoReflect.Descriptor instead.
func (*EventCode13) Descriptor() ([]byte, []int) {
	return file_protobuf_agent_message_proto_rawDescGZIP(), []int{8}
}

func (x *EventCode13) GetTargetObject() string {
	if x != nil {
		return x.TargetObject
	}
	return ""
}

func (x *EventCode13) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

// Sysmon event Code 14: RegistryEvent (Registry object renamed)
type EventCode14 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventType    string `protobuf:"bytes,1,opt,name=EventType,proto3" json:"EventType,omitempty"`
	TargetObject string `protobuf:"bytes,2,opt,name=TargetObject,proto3" json:"TargetObject,omitempty"`
	NewName      string `protobuf:"bytes,3,opt,name=NewName,proto3" json:"NewName,omitempty"`
	Action       string `protobuf:"bytes,4,opt,name=Action,proto3" json:"Action,omitempty"`
}

func (x *EventCode14) Reset() {
	*x = EventCode14{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_agent_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventCode14) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCode14) ProtoMessage() {}

func (x *EventCode14) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_agent_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCode14.ProtoReflect.Descriptor instead.
func (*EventCode14) Descriptor() ([]byte, []int) {
	return file_protobuf_agent_message_proto_rawDescGZIP(), []int{9}
}

func (x *EventCode14) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *EventCode14) GetTargetObject() string {
	if x != nil {
		return x.TargetObject
	}
	return ""
}

func (x *EventCode14) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

func (x *EventCode14) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type NetworkAdapter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *NetworkAdapter) Reset() {
	*x = NetworkAdapter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_agent_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkAdapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkAdapter) ProtoMessage() {}

func (x *NetworkAdapter) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_agent_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkAdapter.ProtoReflect.Descriptor instead.
func (*NetworkAdapter) Descriptor() ([]byte, []int) {
	return file_protobuf_agent_message_proto_rawDescGZIP(), []int{10}
}

func (x *NetworkAdapter) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

// Message returns after done request
type ResponseResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResultInfo string `protobuf:"bytes,1,opt,name=ResultInfo,proto3" json:"ResultInfo,omitempty"`
	Result     bool   `protobuf:"varint,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *ResponseResult) Reset() {
	*x = ResponseResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_agent_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseResult) ProtoMessage() {}

func (x *ResponseResult) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_agent_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseResult.ProtoReflect.Descriptor instead.
func (*ResponseResult) Descriptor() ([]byte, []int) {
	return file_protobuf_agent_message_proto_rawDescGZIP(), []int{11}
}

func (x *ResponseResult) GetResultInfo() string {
	if x != nil {
		return x.ResultInfo
	}
	return ""
}

func (x *ResponseResult) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// File info contain file path to download
type FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath string `protobuf:"bytes,3,opt,name=FilePath,proto3" json:"FilePath,omitempty"`
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_agent_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_agent_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_protobuf_agent_message_proto_rawDescGZIP(), []int{12}
}

func (x *FileInfo) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

// A stream to read a sequence of messages back
type FileData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileChunk []byte `protobuf:"bytes,1,opt,name=FileChunk,proto3" json:"FileChunk,omitempty"`
}

func (x *FileData) Reset() {
	*x = FileData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_agent_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileData) ProtoMessage() {}

func (x *FileData) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_agent_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileData.ProtoReflect.Descriptor instead.
func (*FileData) Descriptor() ([]byte, []int) {
	return file_protobuf_agent_message_proto_rawDescGZIP(), []int{13}
}

func (x *FileData) GetFileChunk() []byte {
	if x != nil {
		return x.FileChunk
	}
	return nil
}

var File_protobuf_agent_message_proto protoreflect.FileDescriptor

var file_protobuf_agent_message_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03,
	0x72, 0x70, 0x63, 0x22, 0x42, 0x0a, 0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x31, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xce, 0x01, 0x0a, 0x0a, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x33, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x70,
	0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x72, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x64, 0x0a, 0x0a, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x37, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x61,
	0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x4c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4e,
	0x0a, 0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x38, 0x12, 0x28, 0x0a, 0x0f,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x42,
	0x0a, 0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x39, 0x12, 0x1c, 0x0a, 0x09,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x43, 0x0a, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x31,
	0x30, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4d, 0x0a, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x31, 0x31, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x49, 0x0a, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x31, 0x32, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x49, 0x0a, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x31, 0x33,
	0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x81, 0x01, 0x0a,
	0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x31, 0x34, 0x12, 0x1c, 0x0a, 0x09,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x4e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x28, 0x0a, 0x0e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x41, 0x64, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x48, 0x0a, 0x0e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x26, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x28, 0x0a, 0x08,
	0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x46, 0x69, 0x6c,
	0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x32, 0xee, 0x05, 0x0a, 0x07, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x12, 0x3b, 0x0a, 0x11, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x31, 0x12, 0x0f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x31, 0x1a, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12,
	0x3b, 0x0a, 0x11, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x33, 0x12, 0x0f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x33, 0x1a, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x11,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x37, 0x12, 0x0f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x37, 0x1a, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x11, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x38, 0x12, 0x0f,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x38, 0x1a,
	0x13, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x11, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x39, 0x12, 0x0f, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x39, 0x1a, 0x13, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x12, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x31, 0x30, 0x12, 0x10, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x31, 0x30, 0x1a, 0x13, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x00, 0x12, 0x3d, 0x0a, 0x12, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x31, 0x31, 0x12, 0x10, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x31, 0x31, 0x1a, 0x13, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x00, 0x12, 0x3d, 0x0a, 0x12, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x31, 0x32, 0x12, 0x10, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x31, 0x32, 0x1a, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00,
	0x12, 0x3d, 0x0a, 0x12, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x31, 0x33, 0x12, 0x10, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x31, 0x33, 0x1a, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12,
	0x3d, 0x0a, 0x12, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x31, 0x34, 0x12, 0x10, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x31, 0x34, 0x1a, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x43,
	0x0a, 0x15, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x41, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x41, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x1a, 0x13, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x0e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x00, 0x30, 0x01, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protobuf_agent_message_proto_rawDescOnce sync.Once
	file_protobuf_agent_message_proto_rawDescData = file_protobuf_agent_message_proto_rawDesc
)

func file_protobuf_agent_message_proto_rawDescGZIP() []byte {
	file_protobuf_agent_message_proto_rawDescOnce.Do(func() {
		file_protobuf_agent_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_agent_message_proto_rawDescData)
	})
	return file_protobuf_agent_message_proto_rawDescData
}

var file_protobuf_agent_message_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_protobuf_agent_message_proto_goTypes = []interface{}{
	(*EventCode1)(nil),     // 0: rpc.EventCode1
	(*EventCode3)(nil),     // 1: rpc.EventCode3
	(*EventCode7)(nil),     // 2: rpc.EventCode7
	(*EventCode8)(nil),     // 3: rpc.EventCode8
	(*EventCode9)(nil),     // 4: rpc.EventCode9
	(*EventCode10)(nil),    // 5: rpc.EventCode10
	(*EventCode11)(nil),    // 6: rpc.EventCode11
	(*EventCode12)(nil),    // 7: rpc.EventCode12
	(*EventCode13)(nil),    // 8: rpc.EventCode13
	(*EventCode14)(nil),    // 9: rpc.EventCode14
	(*NetworkAdapter)(nil), // 10: rpc.NetworkAdapter
	(*ResponseResult)(nil), // 11: rpc.ResponseResult
	(*FileInfo)(nil),       // 12: rpc.FileInfo
	(*FileData)(nil),       // 13: rpc.FileData
}
var file_protobuf_agent_message_proto_depIdxs = []int32{
	0,  // 0: rpc.Manager.ManagerEventCode1:input_type -> rpc.EventCode1
	1,  // 1: rpc.Manager.ManagerEventCode3:input_type -> rpc.EventCode3
	2,  // 2: rpc.Manager.ManagerEventCode7:input_type -> rpc.EventCode7
	3,  // 3: rpc.Manager.ManagerEventCode8:input_type -> rpc.EventCode8
	4,  // 4: rpc.Manager.ManagerEventCode9:input_type -> rpc.EventCode9
	5,  // 5: rpc.Manager.ManagerEventCode10:input_type -> rpc.EventCode10
	6,  // 6: rpc.Manager.ManagerEventCode11:input_type -> rpc.EventCode11
	7,  // 7: rpc.Manager.ManagerEventCode12:input_type -> rpc.EventCode12
	8,  // 8: rpc.Manager.ManagerEventCode13:input_type -> rpc.EventCode13
	9,  // 9: rpc.Manager.ManagerEventCode14:input_type -> rpc.EventCode14
	10, // 10: rpc.Manager.ManagerNetworkAdapter:input_type -> rpc.NetworkAdapter
	12, // 11: rpc.Manager.ManagerGetFile:input_type -> rpc.FileInfo
	11, // 12: rpc.Manager.ManagerEventCode1:output_type -> rpc.ResponseResult
	11, // 13: rpc.Manager.ManagerEventCode3:output_type -> rpc.ResponseResult
	11, // 14: rpc.Manager.ManagerEventCode7:output_type -> rpc.ResponseResult
	11, // 15: rpc.Manager.ManagerEventCode8:output_type -> rpc.ResponseResult
	11, // 16: rpc.Manager.ManagerEventCode9:output_type -> rpc.ResponseResult
	11, // 17: rpc.Manager.ManagerEventCode10:output_type -> rpc.ResponseResult
	11, // 18: rpc.Manager.ManagerEventCode11:output_type -> rpc.ResponseResult
	11, // 19: rpc.Manager.ManagerEventCode12:output_type -> rpc.ResponseResult
	11, // 20: rpc.Manager.ManagerEventCode13:output_type -> rpc.ResponseResult
	11, // 21: rpc.Manager.ManagerEventCode14:output_type -> rpc.ResponseResult
	11, // 22: rpc.Manager.ManagerNetworkAdapter:output_type -> rpc.ResponseResult
	13, // 23: rpc.Manager.ManagerGetFile:output_type -> rpc.FileData
	12, // [12:24] is the sub-list for method output_type
	0,  // [0:12] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_protobuf_agent_message_proto_init() }
func file_protobuf_agent_message_proto_init() {
	if File_protobuf_agent_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protobuf_agent_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventCode1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_agent_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventCode3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_agent_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventCode7); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_agent_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventCode8); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_agent_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventCode9); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_agent_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventCode10); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_agent_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventCode11); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_agent_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventCode12); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_agent_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventCode13); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_agent_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventCode14); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_agent_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkAdapter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_agent_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_agent_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_agent_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_agent_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protobuf_agent_message_proto_goTypes,
		DependencyIndexes: file_protobuf_agent_message_proto_depIdxs,
		MessageInfos:      file_protobuf_agent_message_proto_msgTypes,
	}.Build()
	File_protobuf_agent_message_proto = out.File
	file_protobuf_agent_message_proto_rawDesc = nil
	file_protobuf_agent_message_proto_goTypes = nil
	file_protobuf_agent_message_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ManagerClient is the client API for Manager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ManagerClient interface {
	// Obtains the ResponseResult at a given EventCode1
	ManagerEventCode1(ctx context.Context, in *EventCode1, opts ...grpc.CallOption) (*ResponseResult, error)
	// Obtains the ResponseResult at a given EventCode3
	ManagerEventCode3(ctx context.Context, in *EventCode3, opts ...grpc.CallOption) (*ResponseResult, error)
	// Obtains the ResponseResult at a given EventCode7
	ManagerEventCode7(ctx context.Context, in *EventCode7, opts ...grpc.CallOption) (*ResponseResult, error)
	// Obtains the ResponseResult at a given EventCode8
	ManagerEventCode8(ctx context.Context, in *EventCode8, opts ...grpc.CallOption) (*ResponseResult, error)
	// Obtains the ResponseResult at a given EventCode9
	ManagerEventCode9(ctx context.Context, in *EventCode9, opts ...grpc.CallOption) (*ResponseResult, error)
	// Obtains the ResponseResult at a given EventCode10
	ManagerEventCode10(ctx context.Context, in *EventCode10, opts ...grpc.CallOption) (*ResponseResult, error)
	// Obtains the ResponseResult at a given EventCode11
	ManagerEventCode11(ctx context.Context, in *EventCode11, opts ...grpc.CallOption) (*ResponseResult, error)
	// Obtains the ResponseResult at a given EventCode12
	ManagerEventCode12(ctx context.Context, in *EventCode12, opts ...grpc.CallOption) (*ResponseResult, error)
	// Obtains the ResponseResult at a given EventCode13
	ManagerEventCode13(ctx context.Context, in *EventCode13, opts ...grpc.CallOption) (*ResponseResult, error)
	// Obtains the ResponseResult at a given EventCode14
	ManagerEventCode14(ctx context.Context, in *EventCode14, opts ...grpc.CallOption) (*ResponseResult, error)
	// Obtains the ResponseResult at a given NetworkAdapter
	ManagerNetworkAdapter(ctx context.Context, in *NetworkAdapter, opts ...grpc.CallOption) (*ResponseResult, error)
	// Obtains the FileDatas available within the given FileInfo.
	// Results are streamed rather than returned at once
	ManagerGetFile(ctx context.Context, in *FileInfo, opts ...grpc.CallOption) (Manager_ManagerGetFileClient, error)
}

type managerClient struct {
	cc grpc.ClientConnInterface
}

func NewManagerClient(cc grpc.ClientConnInterface) ManagerClient {
	return &managerClient{cc}
}

func (c *managerClient) ManagerEventCode1(ctx context.Context, in *EventCode1, opts ...grpc.CallOption) (*ResponseResult, error) {
	out := new(ResponseResult)
	err := c.cc.Invoke(ctx, "/rpc.Manager/ManagerEventCode1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) ManagerEventCode3(ctx context.Context, in *EventCode3, opts ...grpc.CallOption) (*ResponseResult, error) {
	out := new(ResponseResult)
	err := c.cc.Invoke(ctx, "/rpc.Manager/ManagerEventCode3", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) ManagerEventCode7(ctx context.Context, in *EventCode7, opts ...grpc.CallOption) (*ResponseResult, error) {
	out := new(ResponseResult)
	err := c.cc.Invoke(ctx, "/rpc.Manager/ManagerEventCode7", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) ManagerEventCode8(ctx context.Context, in *EventCode8, opts ...grpc.CallOption) (*ResponseResult, error) {
	out := new(ResponseResult)
	err := c.cc.Invoke(ctx, "/rpc.Manager/ManagerEventCode8", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) ManagerEventCode9(ctx context.Context, in *EventCode9, opts ...grpc.CallOption) (*ResponseResult, error) {
	out := new(ResponseResult)
	err := c.cc.Invoke(ctx, "/rpc.Manager/ManagerEventCode9", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) ManagerEventCode10(ctx context.Context, in *EventCode10, opts ...grpc.CallOption) (*ResponseResult, error) {
	out := new(ResponseResult)
	err := c.cc.Invoke(ctx, "/rpc.Manager/ManagerEventCode10", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) ManagerEventCode11(ctx context.Context, in *EventCode11, opts ...grpc.CallOption) (*ResponseResult, error) {
	out := new(ResponseResult)
	err := c.cc.Invoke(ctx, "/rpc.Manager/ManagerEventCode11", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) ManagerEventCode12(ctx context.Context, in *EventCode12, opts ...grpc.CallOption) (*ResponseResult, error) {
	out := new(ResponseResult)
	err := c.cc.Invoke(ctx, "/rpc.Manager/ManagerEventCode12", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) ManagerEventCode13(ctx context.Context, in *EventCode13, opts ...grpc.CallOption) (*ResponseResult, error) {
	out := new(ResponseResult)
	err := c.cc.Invoke(ctx, "/rpc.Manager/ManagerEventCode13", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) ManagerEventCode14(ctx context.Context, in *EventCode14, opts ...grpc.CallOption) (*ResponseResult, error) {
	out := new(ResponseResult)
	err := c.cc.Invoke(ctx, "/rpc.Manager/ManagerEventCode14", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) ManagerNetworkAdapter(ctx context.Context, in *NetworkAdapter, opts ...grpc.CallOption) (*ResponseResult, error) {
	out := new(ResponseResult)
	err := c.cc.Invoke(ctx, "/rpc.Manager/ManagerNetworkAdapter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) ManagerGetFile(ctx context.Context, in *FileInfo, opts ...grpc.CallOption) (Manager_ManagerGetFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Manager_serviceDesc.Streams[0], "/rpc.Manager/ManagerGetFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &managerManagerGetFileClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Manager_ManagerGetFileClient interface {
	Recv() (*FileData, error)
	grpc.ClientStream
}

type managerManagerGetFileClient struct {
	grpc.ClientStream
}

func (x *managerManagerGetFileClient) Recv() (*FileData, error) {
	m := new(FileData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ManagerServer is the server API for Manager service.
type ManagerServer interface {
	// Obtains the ResponseResult at a given EventCode1
	ManagerEventCode1(context.Context, *EventCode1) (*ResponseResult, error)
	// Obtains the ResponseResult at a given EventCode3
	ManagerEventCode3(context.Context, *EventCode3) (*ResponseResult, error)
	// Obtains the ResponseResult at a given EventCode7
	ManagerEventCode7(context.Context, *EventCode7) (*ResponseResult, error)
	// Obtains the ResponseResult at a given EventCode8
	ManagerEventCode8(context.Context, *EventCode8) (*ResponseResult, error)
	// Obtains the ResponseResult at a given EventCode9
	ManagerEventCode9(context.Context, *EventCode9) (*ResponseResult, error)
	// Obtains the ResponseResult at a given EventCode10
	ManagerEventCode10(context.Context, *EventCode10) (*ResponseResult, error)
	// Obtains the ResponseResult at a given EventCode11
	ManagerEventCode11(context.Context, *EventCode11) (*ResponseResult, error)
	// Obtains the ResponseResult at a given EventCode12
	ManagerEventCode12(context.Context, *EventCode12) (*ResponseResult, error)
	// Obtains the ResponseResult at a given EventCode13
	ManagerEventCode13(context.Context, *EventCode13) (*ResponseResult, error)
	// Obtains the ResponseResult at a given EventCode14
	ManagerEventCode14(context.Context, *EventCode14) (*ResponseResult, error)
	// Obtains the ResponseResult at a given NetworkAdapter
	ManagerNetworkAdapter(context.Context, *NetworkAdapter) (*ResponseResult, error)
	// Obtains the FileDatas available within the given FileInfo.
	// Results are streamed rather than returned at once
	ManagerGetFile(*FileInfo, Manager_ManagerGetFileServer) error
}

// UnimplementedManagerServer can be embedded to have forward compatible implementations.
type UnimplementedManagerServer struct {
}

func (*UnimplementedManagerServer) ManagerEventCode1(context.Context, *EventCode1) (*ResponseResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ManagerEventCode1 not implemented")
}
func (*UnimplementedManagerServer) ManagerEventCode3(context.Context, *EventCode3) (*ResponseResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ManagerEventCode3 not implemented")
}
func (*UnimplementedManagerServer) ManagerEventCode7(context.Context, *EventCode7) (*ResponseResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ManagerEventCode7 not implemented")
}
func (*UnimplementedManagerServer) ManagerEventCode8(context.Context, *EventCode8) (*ResponseResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ManagerEventCode8 not implemented")
}
func (*UnimplementedManagerServer) ManagerEventCode9(context.Context, *EventCode9) (*ResponseResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ManagerEventCode9 not implemented")
}
func (*UnimplementedManagerServer) ManagerEventCode10(context.Context, *EventCode10) (*ResponseResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ManagerEventCode10 not implemented")
}
func (*UnimplementedManagerServer) ManagerEventCode11(context.Context, *EventCode11) (*ResponseResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ManagerEventCode11 not implemented")
}
func (*UnimplementedManagerServer) ManagerEventCode12(context.Context, *EventCode12) (*ResponseResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ManagerEventCode12 not implemented")
}
func (*UnimplementedManagerServer) ManagerEventCode13(context.Context, *EventCode13) (*ResponseResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ManagerEventCode13 not implemented")
}
func (*UnimplementedManagerServer) ManagerEventCode14(context.Context, *EventCode14) (*ResponseResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ManagerEventCode14 not implemented")
}
func (*UnimplementedManagerServer) ManagerNetworkAdapter(context.Context, *NetworkAdapter) (*ResponseResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ManagerNetworkAdapter not implemented")
}
func (*UnimplementedManagerServer) ManagerGetFile(*FileInfo, Manager_ManagerGetFileServer) error {
	return status.Errorf(codes.Unimplemented, "method ManagerGetFile not implemented")
}

func RegisterManagerServer(s *grpc.Server, srv ManagerServer) {
	s.RegisterService(&_Manager_serviceDesc, srv)
}

func _Manager_ManagerEventCode1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventCode1)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).ManagerEventCode1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Manager/ManagerEventCode1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).ManagerEventCode1(ctx, req.(*EventCode1))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_ManagerEventCode3_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventCode3)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).ManagerEventCode3(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Manager/ManagerEventCode3",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).ManagerEventCode3(ctx, req.(*EventCode3))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_ManagerEventCode7_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventCode7)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).ManagerEventCode7(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Manager/ManagerEventCode7",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).ManagerEventCode7(ctx, req.(*EventCode7))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_ManagerEventCode8_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventCode8)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).ManagerEventCode8(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Manager/ManagerEventCode8",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).ManagerEventCode8(ctx, req.(*EventCode8))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_ManagerEventCode9_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventCode9)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).ManagerEventCode9(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Manager/ManagerEventCode9",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).ManagerEventCode9(ctx, req.(*EventCode9))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_ManagerEventCode10_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventCode10)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).ManagerEventCode10(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Manager/ManagerEventCode10",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).ManagerEventCode10(ctx, req.(*EventCode10))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_ManagerEventCode11_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventCode11)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).ManagerEventCode11(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Manager/ManagerEventCode11",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).ManagerEventCode11(ctx, req.(*EventCode11))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_ManagerEventCode12_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventCode12)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).ManagerEventCode12(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Manager/ManagerEventCode12",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).ManagerEventCode12(ctx, req.(*EventCode12))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_ManagerEventCode13_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventCode13)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).ManagerEventCode13(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Manager/ManagerEventCode13",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).ManagerEventCode13(ctx, req.(*EventCode13))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_ManagerEventCode14_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventCode14)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).ManagerEventCode14(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Manager/ManagerEventCode14",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).ManagerEventCode14(ctx, req.(*EventCode14))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_ManagerNetworkAdapter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetworkAdapter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).ManagerNetworkAdapter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Manager/ManagerNetworkAdapter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).ManagerNetworkAdapter(ctx, req.(*NetworkAdapter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_ManagerGetFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FileInfo)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ManagerServer).ManagerGetFile(m, &managerManagerGetFileServer{stream})
}

type Manager_ManagerGetFileServer interface {
	Send(*FileData) error
	grpc.ServerStream
}

type managerManagerGetFileServer struct {
	grpc.ServerStream
}

func (x *managerManagerGetFileServer) Send(m *FileData) error {
	return x.ServerStream.SendMsg(m)
}

var _Manager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Manager",
	HandlerType: (*ManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ManagerEventCode1",
			Handler:    _Manager_ManagerEventCode1_Handler,
		},
		{
			MethodName: "ManagerEventCode3",
			Handler:    _Manager_ManagerEventCode3_Handler,
		},
		{
			MethodName: "ManagerEventCode7",
			Handler:    _Manager_ManagerEventCode7_Handler,
		},
		{
			MethodName: "ManagerEventCode8",
			Handler:    _Manager_ManagerEventCode8_Handler,
		},
		{
			MethodName: "ManagerEventCode9",
			Handler:    _Manager_ManagerEventCode9_Handler,
		},
		{
			MethodName: "ManagerEventCode10",
			Handler:    _Manager_ManagerEventCode10_Handler,
		},
		{
			MethodName: "ManagerEventCode11",
			Handler:    _Manager_ManagerEventCode11_Handler,
		},
		{
			MethodName: "ManagerEventCode12",
			Handler:    _Manager_ManagerEventCode12_Handler,
		},
		{
			MethodName: "ManagerEventCode13",
			Handler:    _Manager_ManagerEventCode13_Handler,
		},
		{
			MethodName: "ManagerEventCode14",
			Handler:    _Manager_ManagerEventCode14_Handler,
		},
		{
			MethodName: "ManagerNetworkAdapter",
			Handler:    _Manager_ManagerNetworkAdapter_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ManagerGetFile",
			Handler:       _Manager_ManagerGetFile_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protobuf/agent.message.proto",
}
